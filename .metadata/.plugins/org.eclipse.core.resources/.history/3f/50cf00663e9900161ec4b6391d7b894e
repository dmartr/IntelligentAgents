package template;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.TreeMap;
import java.util.List;
import java.util.Map;
import java.util.Queue;

public class AStar {
	
	TreeMap<Double, DeliberativeState> toVisit = new TreeMap<Double, DeliberativeState>();

	private Heuristic heuristic;
	
	public DeliberativeState search(DeliberativeState initialState) {
		toVisit.put(0.0, initialState);
		int iterations = 0;
		while (true){
			iterations++;
			DeliberativeState currentState = toVisit.pollFirstEntry().getValue();
			if (currentState.isGoal()) {
				return currentState;
			} else {
				List<DeliberativeState> nextStates = currentState.getNextStates();
				for (DeliberativeState state : nextStates) {
					double f = heuristic.getF(state);
					toVisit.put(f, state);
				}
			}
		}
			
	}
}
