package template;

/**
 * Using the cost as heuristic
 * @author Ignacio Aguado, Darío Martínez
 */
public class BenefitsHeuristic implements Heuristic{
	
	// g(s) = g(parent) + cost(s)
	// cost(s) is the opposite of the Benefit function defined in the State: the smaller the number, the bette
	public double getG(DeliberativeState state) {
		double g = state.benefits;
		if (state.parent != null) {
			g += getG(state.parent);
		}
		return -g;
	}
	
	public double getH(DeliberativeState state) {
		return -state.totalBenefits;
	}
	
	public double getF(DeliberativeState state) {	
		return getG(state) + getH(state);
	}

}
